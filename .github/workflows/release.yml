name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-binaries:
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            arch: x86_64
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            arch: x86_64
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            arch: aarch64
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            arch: x86_64
            rust_target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: "Setup Rust"
        uses: dtolnay/rust-toolchain@stable
        with:
            targets: ${{ matrix.config.rust_target }}

      - uses: Swatinem/rust-cache@v2
        with:
            key: ${{ matrix.config.rust_target }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
          cache-dependency-path: elk/pnpm-lock.yaml

      - name: Install dependencies
        run: cd elk && pnpm install --force

      - name: "Install native packages"
        if: "matrix.config.os == 'ubuntu-latest'"
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: create apple private key file
        if: "matrix.config.os == 'macos-latest'"
        run: |
          mkdir ./src-tauri/private_keys
          echo "$APPLE_API_PRIVKEY" > ./src-tauri/private_keys/AuthKey_$APPLE_API_KEY.p8
        env:
          APPLE_API_PRIVKEY: '${{ secrets.APPLE_API_PRIVKEY }}'
          APPLE_API_KEY: '${{ secrets.APPLE_API_KEY }}'

      - uses: JonasKruckenberg/tauri-build@v1.2.2
        id: tauri_build
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          ENABLE_CODE_SIGNING: '${{ secrets.APPLE_CERTIFICATE }}'
          APPLE_API_ISSUER: '${{ secrets.APPLE_API_ISSUER }}'
          APPLE_API_KEY: '${{ secrets.APPLE_API_KEY }}'
          APPLE_CERTIFICATE: '${{ secrets.APPLE_CERTIFICATE }}'
          APPLE_CERTIFICATE_PASSWORD: '${{ secrets.APPLE_CERTIFICATE_PASSWORD }}'
          APPLE_SIGNING_IDENTITY: '${{ secrets.APPLE_SIGNING_IDENTITY }}'
          TAURI_KEY_PASSWORD: '${{ secrets.TAURI_KEY_PASSWORD }}'
          TAURI_PRIVATE_KEY: '${{ secrets.TAURI_PRIVATE_KEY }}'
        with:
          target: ${{ matrix.config.rust_target }}
          # args: --verbose

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{ matrix.config.arch }}
          path: "${{ join(fromJSON(steps.tauri_build.outputs.artifacts), '\n') }}"

  publish-to-github:
    needs: [build-binaries]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Run pnpm install
        run: pnpm install

      - name: Download x86_64 artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-x86_64
          path: artifacts/x86_64

      - name: Download aarch64 artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-aarch64
          path: artifacts/aarch64

      - name: Rename artifacts
        run: |
          mv "artifacts/x86_64/macos/Elk.app.tar.gz" "./artifacts/Elk_${{ github.ref_name }}_macos_x86_64.app.tar.gz"
          mv "artifacts/x86_64/macos/Elk.app.tar.gz.sig" "./artifacts/Elk_${{ github.ref_name }}_macos_x86_64.app.tar.gz.sig"
          mv "artifacts/x86_64/dmg/Elk_0.0.0_x64.dmg" "./artifacts/Elk_${{ github.ref_name }}_macos_x86_64.dmg"

          mv "artifacts/aarch64/macos/Elk.app.tar.gz" "./artifacts/Elk_${{ github.ref_name }}_macos_aarch64.app.tar.gz"
          mv "artifacts/aarch64/macos/Elk.app.tar.gz.sig" "./artifacts/Elk_${{ github.ref_name }}_macos_aarch64.app.tar.gz.sig"
          mv "artifacts/aarch64/dmg/Elk_0.0.0_aarch64.dmg" "./artifacts/Elk_${{ github.ref_name }}_macos_aarch64.dmg"

          mv "artifacts/x86_64/Elk_0.0.0_x64_en-US.msi" "./artifacts/Elk_${{ github.ref_name }}_windows_x86_64.msi"
          mv "artifacts/x86_64/Elk_0.0.0_x64_en-US.msi.zip" "./artifacts/Elk_${{ github.ref_name }}_windows_x86_64.msi.zip"
          mv "artifacts/x86_64/Elk_0.0.0_x64_en-US.msi.zip.sig" "./artifacts/Elk_${{ github.ref_name }}_windows_x86_64.msi.zip.sig"
          
          mv "artifacts/x86_64/appimage/elk_0.0.0_amd64.AppImage" "./artifacts/Elk_v0.0.0_linux_x86_64.AppImage"
          mv "artifacts/x86_64/appimage/elk_0.0.0_amd64.AppImage.tar.gz" "./artifacts/Elk_${{ github.ref_name }}_linux_x86_64.AppImage.tar.gz"
          mv "artifacts/x86_64/appimage/elk_0.0.0_amd64.AppImage.tar.gz.sig" "./artifacts/Elk_${{ github.ref_name }}_linux_x86_64.AppImage.tar.gz.sig"
          mv "artifacts/x86_64/deb/elk_0.0.0_amd64.deb" "./artifacts/Elk_${{ github.ref_name }}_linux_x86_64.deb"
                
      - name: "create release"
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          prerelease: true
          generate_release_notes: true
          files: ./artifacts/**/*

      - name: Generate latest.json file
        run: node scripts/latest-json.mjs ${{ github.ref_name }} stable

      - name: Commit latest.json
        run: |
          git config --global user.name "${{ github.event.pusher.name }}"
          git config --global user.email "${{ github.event.pusher.email }}"
          git add latest-stable.json
          git commit -am "Update latest.json"
          git push origin HEAD:main
